shibang 
#!/bin/bash - GENERALLY USED
#!/bin/env bash   - if you have a different location of bash

# Good practice:
set -o nounset				#treat unset variable as error
export PATH=/user:/usr/bin:/usr/sbin:/sbin:/usr/local/bin

Execution:
Verification only - instead of run - will result 0 if OKAY
bash -n  script.sh

 
 
TEST
[       ]

in bash: all that is '0' is TRUE --- all other than '0' is false/error.
===



===
TEST=0
test $TEST -eq 0
echo $?
0
====
TEST=0
[ $TEST -eq 0]
echo $?
====

[[ $TEST -eq 0 ]]    - najlepiej w ten sposob na srodowiskach opartych natywnie o BASH, wszystkie inne - dla kompatybilnosci [ ? ]
google it!
====
Instrukcje sterujÄ…ce / sterowanie przeplywem
if
switch
fo r
while
?dowhile
====
>
TEST=0

if [[ ]]; then

else 

fi
<
====
>
TEST=0

if [[   ${TEST} -eq 0 ]] ; then
	echo  "test jest rowny 0 TEST=${TEST}"
else
	echo "test NIE jest rowny 0 TEST=${TEST}"
fi
<
====
jakie mam dane wejsciowe
co chce z nimi zrobic
jak juz to wiem to musze wiedziec:
jakie kroki uczynic - aby dane wyjsciowe z tych wejsciowych uzyskac

 ----
 
skrypt na tworzenie nowych uzytkownikow  w systemie
INPUT nazwa uzytkownika
WYNIK uzytkownik w systemie
WARUNEK uzytkownik juz istnieje ??


====

>
USERNAME="testuser"

grep --quiet $USERNAME /etc/passwd

if [[ $? -eq 0 ]]; then
	echo "USER EXIST: $USERNAME"
	exit 1
fi

elif [[ $? -ne  0 ]]; then
	useradd -c "nowy uzytkownik" $USERNAME 
else
	echo "NIE MAM TAKIEJ OPCJI !"
	exit 2
fi
<
KILKA elif Powoduje koniecznosc uzycia CASE
===== 

>
case $? in
	0)           
		echo "USER EXISTS"
		exit 1
	;;
	1)
		echo "dodaje usera"
		useradd $USERNAME
	;;
	2)
		echo "inna mozliwosc"
		inne zadanie
	;;
esac
<
====
	












 


